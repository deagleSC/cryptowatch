{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","_useState3","_useState4","crypto","setCrypto","useEffect","Axios","get","then","res","data","coins","react_default","a","createElement","className","type","placeholder","onChange","e","target","value","filter","val","name","toLowerCase","includes","map","id","Fragment","rank","href","websiteUrl","src","icon","alt","width","symbol","marketCap","price","toFixed","availableSupply","Number","volume","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"2PAgFeA,MA3Ef,WAAe,IAAAC,EAIaC,mBAAS,IAJtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAIRK,EAJQH,EAAA,GAIAI,EAJAJ,EAAA,GAAAK,EAKaN,mBAAS,IALtBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAKRE,EALQD,EAAA,GAKAE,EALAF,EAAA,GAiBf,OARAG,oBAAU,WACTC,IAAMC,IAAN,wEAEEC,KAAK,SAACC,GACRL,EAAUK,EAAIC,KAAKC,UAEjB,IAGFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SACGC,UAAU,eACZC,KAAK,OACLC,YAAY,YACZC,SAAU,SAACC,GACXnB,EAAUmB,EAAEC,OAAOC,UAGpBT,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oCAChBH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,kBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,oBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,wBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,mBACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BACJF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,8BAILF,EAAAC,EAAAC,cAAA,aAECX,EACCmB,OAAO,SAACC,GACT,OAAOA,EAAIC,KAAKC,cAAcC,SAAS3B,EAAO0B,iBAE7CE,IAAI,SAACJ,EAAKK,GACX,OACChB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAgB,SAAA,KACAjB,EAAAC,EAAAC,cAAA,MAAIc,GAAIA,EAAIb,UAAU,OACrBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAQQ,EAAIO,MAC1BlB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QACdH,EAAAC,EAAAC,cAAA,KAAGiB,KAAMR,EAAIS,YACZpB,EAAAC,EAAAC,cAAA,OAAKmB,IAAKV,EAAIW,KAAMC,IAAI,OAAOC,MAAM,UAG3CxB,EAAAC,EAAAC,cAAA,SAAIS,EAAIC,OAGHZ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUQ,EAAIc,QAC5BzB,EAAAC,EAAAC,cAAA,mBAAMS,EAAIe,WACV1B,EAAAC,EAAAC,cAAA,mBAAMS,EAAIgB,MAAMC,QAAQ,IACxB5B,EAAAC,EAAAC,cAAA,UAAKS,EAAIkB,iBACT7B,EAAAC,EAAAC,cAAA,UAAK4B,OAAOnB,EAAIoB,QAAQH,QAAQ,YChExBI,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,WAAP,KACErC,EAAAC,EAAAC,cAACoC,EAAD","file":"static/js/main.fc440dca.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./App.css\";\r\nimport Axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction App() {\r\n\r\n// Setting up the initial states using\r\n// react hook 'useState'\r\nconst [search, setSearch] = useState(\"\");\r\nconst [crypto, setCrypto] = useState([]);\r\n\r\n// Fetching crypto data from the API only\r\n// once when the component is mounted\r\nuseEffect(() => {\r\n\tAxios.get(\r\n`https://api.coinstats.app/public/v1/coins?skip=0&limit=100¤cy=INR`\r\n\t).then((res) => {\r\n\tsetCrypto(res.data.coins);\r\n\t});\r\n}, []);\r\n\r\nreturn (\r\n\t<div className=\"App container-fluid\">\r\n\t<h1>CryptoWatch</h1>\r\n\t<input \r\n    className=\"form-control\"\r\n\t\ttype=\"text\"\r\n\t\tplaceholder=\"Search...\"\r\n\t\tonChange={(e) => {\r\n\t\tsetSearch(e.target.value);\r\n\t\t}}\r\n\t/>\r\n\t<table className=\"table-responsive container-fluid\">\r\n\t\t<thead>\r\n\t\t<tr className=\"col\">\r\n\t\t\t<td><b>Rank</b></td>\r\n\t\t\t<td><b>Name</b></td>\r\n\t\t\t<td><b>Symbol</b></td>\r\n\t\t\t<td><b>Market Cap</b></td>\r\n\t\t\t<td><b>Price</b></td>\r\n\t\t\t<td><b>Available Supply</b></td>\r\n\t\t\t<td><b>Volume (24hrs)</b></td>\r\n\t\t</tr>\r\n\t\t</thead>\r\n\t\t{/* Mapping all the cryptos */}\r\n\t\t<tbody>\r\n\t\t{/* Filtering to check for the searched crypto */}\r\n\t\t{crypto\r\n\t\t\t.filter((val) => {\r\n\t\t\treturn val.name.toLowerCase().includes(search.toLowerCase());\r\n\t\t\t})\r\n\t\t\t.map((val, id) => {\r\n\t\t\treturn (\r\n\t\t\t\t<>\r\n\t\t\t\t<tr id={id} className=\"col\">\r\n\t\t\t\t\t<td className=\"rank\">{val.rank}</td>\r\n\t\t\t\t\t<td className=\"logo\">\r\n\t\t\t\t\t<a href={val.websiteUrl}>\r\n\t\t\t\t\t\t<img src={val.icon} alt=\"logo\" width=\"30px\" />\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t\r\n<p>{val.name}</p>\r\n\r\n\t\t\t\t\t</td>\r\n\t\t\t\t\t<td className=\"symbol\">{val.symbol}</td>\r\n\t\t\t\t\t<td>₹{val.marketCap}</td>\r\n\t\t\t\t\t<td>₹{val.price.toFixed(2)}</td>\r\n\t\t\t\t\t<td>{val.availableSupply}</td>\r\n\t\t\t\t\t<td>{Number(val.volume).toFixed(0)}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t\t</>\r\n\t\t\t);\r\n\t\t\t})}\r\n\t\t</tbody>\r\n\t</table>\r\n\t</div>\r\n);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}